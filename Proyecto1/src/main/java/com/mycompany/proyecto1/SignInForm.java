/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1;

import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author mario
 */
public class SignInForm extends javax.swing.JFrame {
    
    public static String adminUser = "";
    public static String lastUser = "";
    private final String USER_FILE = "C:\\MEIA/usuario.txt";
    private final String USER_BITACORA_FILE = "C:\\MEIA/bitacora_usuario.txt";
    private final String DESC_USER_FILE = "C:\\MEIA/desc_usuario.txt";
    private final String DESC_USER_BITACORA_FILE = "C:\\MEIA/desc_bitacora_usuario.txt";
    /**
     * Creates new form SignInForm
     */
    public SignInForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUser = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DateC = new com.toedter.calendar.JDateChooser();
        btnLog = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPath = new javax.swing.JTextField();
        lblWarning = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLastNameKeyTyped(evt);
            }
        });

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPasswordKeyTyped(evt);
            }
        });

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyTyped(evt);
            }
        });

        jLabel1.setText("User");

        jLabel2.setText("Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("Password");

        jLabel5.setText("Email");

        jLabel6.setText("Phone Number");

        btnLog.setText("Registrarse");
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });

        jLabel7.setText("Birth Date");

        jLabel8.setText("Path Profile Picture");

        txtPath.setEditable(false);
        txtPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPathActionPerformed(evt);
            }
        });
        txtPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPathKeyTyped(evt);
            }
        });

        lblWarning.setText("Correo no v√°lido.");

        jButton1.setText("Add profile picture");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(jLabel4)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUser, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWarning)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnLog)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(txtPhoneNumber)
                            .addComponent(txtPath, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblWarning)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(DateC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(3, 3, 3)
                        .addComponent(jButton1)))
                .addGap(30, 30, 30)
                .addComponent(btnLog)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPathActionPerformed

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        File fileUser = new File(DESC_USER_FILE);
        File fileBitacora = new File(DESC_USER_BITACORA_FILE);
        
        /*if(!fileUser.exists() && !fileBitacora.exists())
        {
            AdminForm.updateDescriptorUser(true);
            AdminForm.updateDescriptorUser(false);
        }*/
        
        if(ValidateEmail(txtEmail.getText()) && IsNumber(txtPhoneNumber.getText()) && ValidatePassword(txtPassword.getText())){
            String[] newUser = new String[10];
            newUser[0] = txtUser.getText();
            newUser[1] = txtName.getText();
            newUser[2] = txtLastName.getText();
            newUser[3] = txtPassword.getText();
            newUser[5] = getBirthDate();
            newUser[6] = txtEmail.getText();
            newUser[7] = txtPhoneNumber.getText();
            newUser[8] = txtPath.getText();
            newUser[9] = "1";
            
            if(IsUser()){
                newUser[4] = "0";
                lastUser = newUser[0];
            }else{
                newUser[4] = "1";
                lastUser = newUser[0];
            }
            
            String[] userFinded = searchUser(newUser[0]);
            if (userFinded[0] != null)  return;
            
            AdminForm.reorganize();
            String userAdded = "";
            newUser[3] = Proyecto1.encode(newUser[3]);
            for (int i = 0; i < newUser.length; i++) {
            userAdded += newUser[i];
                if (i != newUser.length -1) {
                    userAdded += "|";
                }
            }
            userAdded += System.getProperty("line.separator");
            Proyecto1.saveFile(USER_BITACORA_FILE, userAdded, true);
            if (SignInForm.lastUser.equals("")) SignInForm.lastUser = newUser[0];
            AdminForm.updateDescriptorUser(true);
            AdminForm.updateDescriptorUser(false);
        }else
        {
            JOptionPane.showMessageDialog(null, "Ingres√≥ incorrectamente alguno de los campos","ERROR!", WIDTH);
        }
    }//GEN-LAST:event_btnLogActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        if(ValidateEmail(txtEmail.getText()))
        {
            lblWarning.setVisible(false);
        }else{
            lblWarning.setVisible(true);
        }
    }//GEN-LAST:event_txtEmailKeyReleased
    //Valida cantidad de caracteres m√°xima por campo
    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        if(txtUser.getText().length() >= 20)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyTyped
        if(txtPassword.getText().length() >= 40)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtPasswordKeyTyped

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        if(txtName.getText().length() >= 30)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtNameKeyTyped

    private void txtLastNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyTyped
        if(txtLastName.getText().length() >= 30)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtLastNameKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        if(txtEmail.getText().length() >= 40)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtPhoneNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyTyped
        if(txtPhoneNumber.getText().length() >= 8)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtPhoneNumberKeyTyped

    private void txtPathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPathKeyTyped
        if(txtPath.getText().length() >= 200)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtPathKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser dialog = new JFileChooser("C:\\MEIA");
        
        File fichero;
        String sourcePath = "";
        
        //dialog.setFileSelectionMode(JFileChooser.);
        int valor = dialog.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            fichero = dialog.getSelectedFile();
            sourcePath = fichero.getPath();
        }
        
        if (!sourcePath.endsWith(".jpg") && !sourcePath.endsWith(".jpeg") && !sourcePath.endsWith(".png")) {
            JOptionPane.showMessageDialog(null, "El tipo de archivo no es un archivo v√°lido, debe ser un archivo .jpg, .jpeg o .png","Error!", WIDTH);
            return;
        }
        
        txtPath.setText(sourcePath);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private String getBirthDate()
    {
        String day = Integer.toString(DateC.getCalendar().get(Calendar.DAY_OF_MONTH));
        String month = Integer.toString(DateC.getCalendar().get(Calendar.MONTH) + 1);
        String year = Integer.toString(DateC.getCalendar().get(Calendar.YEAR));
        if (day.length() == 1) {
            day = "0" + day;
        }
        String date = (day+ "/" + month+ "/" + year);
        return date;
    }
    
    //Formato para correo electr√≥nico
    public static boolean ValidateEmail(String email)
    {
        Pattern pat = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        Matcher matcher = pat.matcher(email);
        return matcher.find();        
    }
    //Comprueba si el par√°metro es un dato num√©rico
    public static boolean IsNumber(String data)
    {
        boolean output;
        try
        {
            Integer.parseInt(data);
            output = true;
        }catch(NumberFormatException e) {
            output = false;
        }
        return output;
    }
    
    public static void setPasswordFile()
    {
        String Filepath = "C:\\MEIA/PasswordComparisons.txt";
        String[] comparisons = new String[5];
        comparisons[0] = "8";
        comparisons[1] = "2";
        comparisons[2] = "2";
        comparisons[3] = "2";
        comparisons[4] = "2";
        
        String data = "";
        for(int i = 0; i<comparisons.length; i++){
            data+=comparisons[i];
            
            if(i != comparisons.length-1){
                data+= System.getProperty("line.separator");
            }
        }
        Proyecto1.saveFile(Filepath, data, true);
    }
    
    public static boolean ValidatePassword(String password)
    {
        File passwordFile = new File("C:\\MEIA/PasswordComparisons.txt");
        if(!passwordFile.exists()){
            setPasswordFile();
        }
        
        boolean status = true;
        int uppercaseCounter = 0;
        int lowercaseCounter = 0;
        int digitCounter = 0;
        int specialCounter =0;
        
        try{
            File ComparisonFile = new File ("C:\\MEIA/PasswordComparisons.txt");
            FileReader frComparison = new FileReader(ComparisonFile);
            BufferedReader brComparison = new BufferedReader(frComparison); 

            String line;
            ArrayList<String> list = new ArrayList<String>();
            while((line = brComparison.readLine()) != null){
                list.add(line);
            }
            String[] output = list.toArray(new String[0]);

            for(int i = 0; i<password.length(); i++)
            {
               char c = password.charAt(i);
               if(Character.isUpperCase(c)){uppercaseCounter++;}
               if(Character.isLowerCase(c)){lowercaseCounter++;}
               if(IsNumber(String.valueOf(c))){digitCounter++;}
               if(c>=33 && c<=46 || c==64){specialCounter++;}  
            }
            if((password.length() >= Integer.parseInt(output[0])) &&(uppercaseCounter >= Integer.parseInt(output[1]))
                && (lowercaseCounter >= Integer.parseInt(output[2])) && (digitCounter >= Integer.parseInt(output[3]))
                && (specialCounter >= Integer.parseInt(output[4])))
               {
                   status = true;
               }else{
                   status = false;
               }
       }catch(IOException ex) {
           JOptionPane.showMessageDialog(null, "El archivo no existe.");
       }   
        
       return status;
    }
    
    private boolean IsUser()
    {
        String descBitacoraPath = "C:\\MEIA/desc_bitacora_usuario.txt";
        String descUsuarioPath = "C:\\MEIA/desc_usuario.txt";
        ArrayList<String> descUserData = Proyecto1.getFile(descUsuarioPath);
        ArrayList<String> descUserBData = Proyecto1.getFile(descBitacoraPath);
        
        String[] userData = new String[9];
        String[] userBData = new String[9];
        for (int i = 0; i < descUserData.size(); i++) {
            userData[i] = descUserData.get(i);
            userBData[i] = descUserBData.get(i);
        }
        
        return !(userData[5] == null && userBData[5] == null);
    }
    
    /*public static void CreateDescriptorUser(boolean bitacora) {
        String path;
        ArrayList<String> descData;
        if (bitacora) {
            path = "C:\\MEIA/desc_bitacora_usuario.txt";
            descData = Proyecto1.getFile(path);
        }
        else {
            path = "C:\\MEIA/desc_usuario.txt";
            descData = Proyecto1.getFile(path);
        }
        
        String[] data = new String[9];
        for (int i = 0; i < descData.size(); i++) {
            data[i] = descData.get(i);
        }
        
        data[0] = "Nombre simbolico: ";
        if (data[1] == null) {
            data[1] = "Fecha de creaci√≥n: ";
        }
        if (data[2] == null) {
            data[2] = "Usuario creaci√≥n: ";

        data[3] = "Fecha de modificaci√≥n: ";
        data[4] = "Usuario de modificaci√≥n: ";
        data[5] = "Registros: 0";
        data[6] = "Registros activos: 0";
        data[7] = "Registros inactivos: 0";
        data[8] = "Max reorganizaci√≥n: 3";
        
        String fileString = "";
        for (int i = 0; i < data.length; i++) {
            fileString += data[i];
            if (i != data.length - 1) {
                fileString += System.getProperty("line.separator");
            }
        }
        
        Proyecto1.saveFile(path, fileString, true);
        }
    }*/
    
    public String[] searchUser(String userName) {
        ArrayList<String> fileUsers = Proyecto1.getFile(USER_FILE);
        ArrayList<String> fileBitacoraUsers = Proyecto1.getFile(USER_BITACORA_FILE);
        String[] userFinded = new String[11];
        
        for (String userData : fileUsers) {
            String[] user = userData.split("\\|");
            if (user[0].equals(userName) && user[9].equals("1")) {
                System.arraycopy(user, 0, userFinded, 0, user.length);
                userFinded[10] = USER_FILE;
                break;
            }
        }
        
        for (String userData : fileBitacoraUsers) {
            String[] user = userData.split("\\|");
            if (user[0].equals(userName) && user[9].equals("1")) {
                System.arraycopy(user, 0, userFinded, 0, user.length);
                userFinded[10] = USER_BITACORA_FILE;
                break;
            }
        }
        return userFinded;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignInForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignInForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateC;
    private javax.swing.JButton btnLog;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
