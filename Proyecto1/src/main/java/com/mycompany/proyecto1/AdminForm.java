/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.io.*;
import java.util.ArrayList;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author mario
 */
public class AdminForm extends javax.swing.JFrame {

    /**
     * Creates new form AdminForm
     */
    public AdminForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminForm().setVisible(true);
            }
        });
    }
    
    public static void makeBackup(String _destinationPath) {
        String destinationPath = _destinationPath + "/MEIA_Backup";
        var source = new File("C:\\MEIA");
        var dest = new File(destinationPath);
        
        try {
            Files.copy(source.toPath(), dest.toPath(), StandardCopyOption.COPY_ATTRIBUTES);
        }
        catch (IOException e) {
            
        }
        
        File[] files = new File("C:\\MEIA").listFiles(); 
        ArrayList<String> results = new ArrayList<String>();
        for (File file : files) {
            System.out.println(file.toPath());
            System.out.println(file.getName());
            String strPath = dest.toString() + "/" + file.getName();
            Path path = Paths.get(strPath);
            if (file.isFile()) {
                //results.add(file.getName());
                try {
                    Files.copy(file.toPath(), path, StandardCopyOption.COPY_ATTRIBUTES);
                }
                catch (IOException e) {

                }
            }
        }
        
        // update bitacora
        String bitacoraPath = "C:\\MEIA/bitacora_backup";
        File bitacoraFile = new File(bitacoraPath);
        String date = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        
        try {
            try (FileWriter Write = new FileWriter(bitacoraFile, true); 
                BufferedWriter bw = new BufferedWriter(Write)) {
                bw.write(_destinationPath + "|" + "usuario" + "|" + date + System.getProperty( "line.separator" ));
                bw.close();
            }
        }
        catch(IOException ex)
        {
            String strError = ex.getMessage();
        } 
        
        // update desc bitacora
         String descBitacoraPath = "C:\\MEIA/desc_bitacora_backup";
         ArrayList<String> rawData = Proyecto1.getFile(descBitacoraPath);
         String[] data = new String[6];
         for (int i = 0; i < rawData.size(); i++) {
             data[i] = rawData.get(i);
             System.out.println(rawData.get(i));
         }
         data[0] = "Nombre simbolico: ";
         if (data[1] == null) {
             data[1] = "Fecha de creaci贸n: " + date;
         }
         if (data[2] == null) {
             data[2] = "Usuario creaci贸n: ";
         }
         data[3] = "Fecha de modificaci贸n: " + date;
         data[4] = "Usuario de modificaci贸n: ";
         if (data[5] == null) {
             data[5] = "Registros: 1";
         } else {
             char number = data[5].charAt(11);
             Integer num = Integer.parseInt(Character.toString(number)) + 1;
             System.out.println(num);
             data[5] = "Registros: " + num.toString();
         }
         
         File descBitacoraFile = new File(descBitacoraPath);
         
         try {
            try (FileWriter Write = new FileWriter(descBitacoraFile, false); 
                BufferedWriter bw = new BufferedWriter(Write)) {
                bw.write(data[0] + System.getProperty("line.separator") + data[1] + System.getProperty("line.separator") + data[2] + System.getProperty("line.separator") + data[3] + System.getProperty("line.separator") + data[4] + System.getProperty("line.separator") + data[5]);
                bw.close();
            }
        }
        catch(IOException ex)
        {
            String strError = ex.getMessage();
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
