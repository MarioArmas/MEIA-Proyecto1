/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto1;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.io.*;
import java.util.ArrayList;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;

/**
 *
 * @author mario
 */
public class AdminForm extends javax.swing.JFrame {

    /**
     * Creates new form AdminForm
     */
    public AdminForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackupBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackupBtn.setText("Backup");
        BackupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackupBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(242, Short.MAX_VALUE)
                .addComponent(BackupBtn)
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(216, Short.MAX_VALUE)
                .addComponent(BackupBtn)
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackupBtnActionPerformed
        File file;
        String destinationPath = "";
        
        JFileChooser dialog = new JFileChooser("C:\\MEIA");
        dialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int value = dialog.showOpenDialog(this);
        
        if (value == JFileChooser.APPROVE_OPTION) {
            file = dialog.getSelectedFile();
            destinationPath = file.getPath();
        }
        
        makeBackup(destinationPath);
        updateBackupBitacora(destinationPath);
        updateDescriptorBackupBitacora();
    }//GEN-LAST:event_BackupBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminForm().setVisible(true);
            }
        });
    }
    
    private void makeBackup(String _destinationPath) {
        String destinationPath = _destinationPath + "/MEIA_Backup";
        var source = new File("C:\\MEIA");
        var dest = new File(destinationPath);
        
        try {
            Files.copy(source.toPath(), dest.toPath(), StandardCopyOption.COPY_ATTRIBUTES);
        }
        catch (IOException ex) {
            String strError = ex.getMessage();
            System.out.println(strError);
        }
        
        File[] files = new File("C:\\MEIA").listFiles(); 
        for (File file : files) {
            String strPath = dest.toString() + "/" + file.getName();
            Path path = Paths.get(strPath);
            if (file.isFile()) {
                try {
                    Files.copy(file.toPath(), path, StandardCopyOption.COPY_ATTRIBUTES);
                }
                catch (IOException ex) {
                    String strError = ex.getMessage();
                    System.out.println(strError);
                }
            }
        }
    }
    
    private void updateBackupBitacora(String destinationPath) {
        String bitacoraPath = "C:\\MEIA/bitacora_backup";
        File bitacoraFile = new File(bitacoraPath);
        String date = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        
        try {
            try (FileWriter Write = new FileWriter(bitacoraFile, true); 
                BufferedWriter bw = new BufferedWriter(Write)) {
                bw.write(destinationPath + "|" + "usuario" + "|" + date + System.getProperty( "line.separator" ));
                bw.close();
            }
        }
        catch(IOException ex) {
            String strError = ex.getMessage();
            System.out.println(strError);
        }
    }
    
    private void updateDescriptorBackupBitacora() {
        String date = new SimpleDateFormat("dd-MM-yyyy").format(new Date());
        String descBitacoraPath = "C:\\MEIA/desc_bitacora_backup";
        ArrayList<String> rawData = Proyecto1.getFile(descBitacoraPath);
        String[] data = new String[6];
        for (int i = 0; i < rawData.size(); i++) {
            data[i] = rawData.get(i);
        }
        
        data[0] = "Nombre simbolico: ";
        if (data[1] == null) {
            data[1] = "Fecha de creaci贸n: " + date;
        }
        if (data[2] == null) {
            data[2] = "Usuario creaci贸n: ";
        }
        data[3] = "Fecha de modificaci贸n: " + date;
        data[4] = "Usuario de modificaci贸n: ";
        if (data[5] == null) {
            data[5] = "Registros: 1";
        } else {
            String number = data[5].substring(11, data[5].length());
            Integer num = Integer.parseInt(number) + 1;
            data[5] = "Registros: " + num.toString();
        }

        File descBitacoraFile = new File(descBitacoraPath);

        try {
           try (FileWriter Write = new FileWriter(descBitacoraFile, false); 
               BufferedWriter bw = new BufferedWriter(Write)) {
               bw.write(data[0] + System.getProperty("line.separator") + data[1] + System.getProperty("line.separator") + data[2] + System.getProperty("line.separator") + data[3] + System.getProperty("line.separator") + data[4] + System.getProperty("line.separator") + data[5]);
               bw.close();
           }
       }
       catch(IOException ex) {
           String strError = ex.getMessage();
           System.out.println(strError);
       }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackupBtn;
    // End of variables declaration//GEN-END:variables
}
